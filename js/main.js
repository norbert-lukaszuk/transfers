!function(n){var c={};function t(e){if(c[e])return c[e].exports;var l=c[e]={i:e,l:!1,exports:{}};return n[e].call(l.exports,l,l.exports,t),l.l=!0,l.exports}t.m=n,t.c=c,t.d=function(n,c,e){t.o(n,c)||Object.defineProperty(n,c,{enumerable:!0,get:e})},t.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},t.t=function(n,c){if(1&c&&(n=t(n)),8&c)return n;if(4&c&&"object"==typeof n&&n&&n.__esModule)return n;var e=Object.create(null);if(t.r(e),Object.defineProperty(e,"default",{enumerable:!0,value:n}),2&c&&"string"!=typeof n)for(var l in n)t.d(e,l,function(c){return n[c]}.bind(null,l));return e},t.n=function(n){var c=n&&n.__esModule?function(){return n.default}:function(){return n};return t.d(c,"a",c),c},t.o=function(n,c){return Object.prototype.hasOwnProperty.call(n,c)},t.p="",t(t.s=0)}([function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var os__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);\n/* harmony import */ var os__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(os__WEBPACK_IMPORTED_MODULE_0__);\n\r\n\r\n\r\n// import { doc } from \"prettier\";\r\n\r\n// service worker registration - remove if you're not going to use it\r\n\r\nif ('serviceWorker' in navigator) {\r\n  window.addEventListener('load', function () {\r\n    navigator.serviceWorker.register('serviceworker.js').then(function (registration) {\r\n      // Registration was successful\r\n      console.log('ServiceWorker registration successful with scope: ', registration.scope);\r\n    }, function (err) {\r\n      // registration failed :(\r\n      console.log('ServiceWorker registration failed: ', err);\r\n    });\r\n  });\r\n}\r\nconst add__transfer = document.getElementById(\"add__transfer\");\r\nconst addButon = document.getElementById(\"addButton\");\r\nconst backArrow = document.getElementById(\"backArrow\");\r\nconst calendarBackArrow = document.getElementById(\"calendarBackArrow\");\r\nconst calendarButton = document.getElementById(\"calendarButton\");\r\nconst calendarPopup = document.querySelector(\".calendar__popup\");\r\nconst calendarWraper = document.querySelector(\".calendar__wraper\");\r\nconst form__user = document.getElementById(\"form__user\");\r\nconst monthName__navigation = document.getElementById(\"monthNav\");\r\nconst show__done = document.getElementById(\"show__done\");\r\nconst transfers__submit = document.getElementById(\"transfers__submit\");\r\nconst ul = document.getElementById(\"list__transfers\");\r\nconst user__panel = document.querySelector(\".user__panel\");\r\nconst user__logout = document.getElementById(\"user__logout\");\r\nconst user__button = document.getElementById(\"userButton\");\r\nconst navigation = document.querySelector(\".navigation\");\r\nconst popup = document.querySelector(\".popup\");\r\nconst date = document.getElementById(\"calendar\");\r\nconst today = document.getElementById(\"calendar\");\r\nlet bank__clicked = null;\r\nconst category = document.getElementById(\"category\");\r\nconst title = document.getElementById(\"title\");\r\nconst amount = document.getElementById(\"amount\");\r\nconst calendarBackArow = document.querySelector(\".calendar__backArow\");\r\nconst newDate = new Date(date);\r\nconst transfers = document.querySelector(\".transfer\");\r\n\r\nlet input = document.querySelector(\".input\");\r\nconst bankSelectWraper = document.querySelector(\".bankSelectWraper\");\r\nconst mbankIcon = document.getElementById(\"mbankIcon\");\r\nconst pkoIcon = document.getElementById(\"pkoIcon\");\r\nconst list = document.querySelector(\".list\");\r\n// Get transfer info from form\r\nconst Transfer = (amount, bank, category, date, status, title) =>{\r\n    const transfer ={\r\n      amount: amount,\r\n      bank: bank,\r\n      category: category,\r\n      date: date,\r\n      status: status,\r\n      title: title,\r\n      \r\n    }\r\n    return transfer\r\n  }\r\n\r\n\r\nconst daysLeft = (date) => {//funkcja zwraca liczbe dni miedzy datą a dziś\r\n  return Math.ceil((new Date(date) - new Date()) / 1000 / 60 / 60 / 24);\r\n}\r\n\r\nconst statusCircle = (timeLeft) => {//kolor kółka zależnie od ilości pozostałych dni\r\n  if (timeLeft >= 3) {\r\n    return 'statusCircle--green'\r\n  }\r\n  else if (timeLeft == 2) {\r\n    return 'statusCircle--yellow'\r\n  }\r\n  else if (timeLeft <= 1) {\r\n    return 'statusCircle--crimson'\r\n  }\r\n}\r\n\r\nconst daysInMonth = (month) => {\r\n  return new Date(2020, month + 1, 0).getDate()\r\n}\r\nconst monthName = (month) =>{\r\n  switch (month) {\r\n    case 0:\r\n      return 'January';\r\n      break;\r\n    \r\n    case 1:\r\n      return 'February';\r\n      break;\r\n    case 2:\r\n      return 'March';\r\n      break;\r\n    case 3:\r\n      return 'April';\r\n      break;\r\n    case 4:\r\n      return 'May';\r\n      break;\r\n    case 5:\r\n      return 'June';\r\n      break;\r\n    case 6:\r\n      return 'July';\r\n      break;\r\n    case 7:\r\n      return 'August';\r\n      break;\r\n    case 8:\r\n      return 'September';\r\n      break;\r\n    case 9:\r\n      return 'October';\r\n      break;\r\n    case 10:\r\n      return 'November';\r\n      break;\r\n    case 11:\r\n      return 'December';\r\n      break;\r\n    \r\n  }\r\n}\r\n\r\nconst dayOfWeekConvert = (day)=>{\r\n  if(day=== 0){\r\n    day=6;\r\n    return day;\r\n  }\r\n  else{return day-1}\r\n}\r\n\r\nconst addTransfer = (amount, bank, category, date, status, title)=>{\r\n  const dayDifference = dateFns.differenceInDays(new Date(date), new Date());\r\n\r\n  if (status === \"done\") {\r\n    const html = `\r\n    <div class=\"strip__done\">${date.toISOString().slice(0,10)}</div>\r\n    <div class=\"logoWraper\">\r\n      <div class=\"category\">${category}</div>\r\n    </div>\r\n    <div class=\"timeLeft timeLeftDone\"></div> \r\n    <div class=\"container__bar container__bar--hide\">\r\n        <div class=\"amount\">${amount} zł</div> \r\n        <p class=\"title\">${title}</p>\r\n            <div class=\"containerBar__icons containerBar__icons--done\">\r\n            <i class=\"icon__delete far fa-trash-alt\"></i>\r\n            </div>\r\n        </div>\r\n    <i class=\"arrow fas fa-chevron-down\"></i>\r\n  </div>`;\r\n    return html;\r\n  } else {\r\n    const html = `\r\n    <div class=\"strip__${bank}\">${date.toISOString().slice(0,10)}</div>\r\n    <div class=\"logoWraper\">\r\n      <img class=\"image\" src=\"assets/img/${bank} 30x30.png\">\r\n      <div class=\"category\">${category}</div>\r\n      <div class=\"statusCircle ${statusCircle(dayDifference)}\"></div>\r\n    </div>\r\n    <div class=\"timeLeft\">${dateFns.differenceInDays(\r\n      new Date(date),\r\n      new Date()\r\n    )} d.</div> \r\n    <div class=\"container__bar container__bar--hide\">\r\n        <div class=\"amount\">${amount} zł</div> \r\n        <p class=\"title\">${title}</p>\r\n            <div class=\"containerBar__icons\">\r\n            <i class=\"icon__checked far fa-check-square\"></i>\r\n            <i class=\"icon__edit far fa-edit\"></i>\r\n            <i class=\"icon__delete far fa-trash-alt\"></i>\r\n            </div>\r\n        </div>\r\n    <i class=\"arrow fas fa-chevron-down\"></i>\r\n    </div>`;\r\n    return html;\r\n  }\r\n  \r\n}\r\nconst calendarReset = ()=>{\r\n  const calendar = calendarWraper.querySelectorAll('.day:not(.day--empty)');\r\n  \r\n  calendar.forEach(e=>{\r\n    e.innerHTML = null;\r\n    e.classList.add('day--empty');\r\n  })\r\n}\r\nconst deleteTransfer = (id)=>{\r\n\r\n  const containers =  document.querySelectorAll('.container');\r\n  containers.forEach(e=>{ \r\n    if(e.getAttribute('data-id') === id){\r\n      db.collection('bankTransfers').doc(id).delete()\r\n      .then(console.log('transfer deleted from firebase'))\r\n      .catch(err => console.log(err))\r\n    }\r\n\r\n})\r\n\r\n}\r\n\r\nconst printCalendar = (today) =>{\r\n\r\n  const list = document.querySelectorAll('.container:not(.container__done)');\r\n  const firstDayOfMonth = dayOfWeekConvert(dateFns.startOfMonth(today).getDay());\r\n  const month = monthName(today.getMonth());\r\n  let monthNumber = (today.getMonth()+1).toString();\r\n  let year = today.getFullYear().toString();\r\n  const monthHeader = document.querySelector('.monthName__header');\r\n  const yearHeader = document.getElementById('year__header');\r\n  monthHeader.innerText = month;\r\n  yearHeader.innerText = year;\r\n  const daysInMonth = dateFns.getDaysInMonth(today);\r\n  const lastDayInArray = daysInMonth + firstDayOfMonth-1;\r\n  const daysInCalendar = calendarWraper.querySelectorAll('.day');\r\n  let dayInArray = new Date(`${year}-${monthNumber}-1`);\r\n\r\n  for(let i = firstDayOfMonth; i<=lastDayInArray; i++){\r\n\r\n    daysInCalendar[i].classList.remove('day--empty');\r\n    daysInCalendar[i].innerHTML = `<p class=\"dayInMonth\">${dayInArray.getDate()} ${dayInArray.toString().slice(0,3)}</p>`\r\n    dayInArray = dateFns.addDays(dayInArray,1);\r\n  }\r\n\r\n  list.forEach(e=>{\r\n    \r\n    const category = e.children.item(1).children.item(1).innerText;\r\n    const transferDay = dateFns.getDate(new Date(e.children.item(0).innerText));\r\n    const transferMonth = dateFns.getMonth(new Date(e.children.item(0).innerText))+1;\r\n    \r\n    if(transferMonth === +monthNumber){\r\n      const calendarInPosition = (transferDay+firstDayOfMonth)-1;\r\n      daysInCalendar[calendarInPosition].innerHTML += `<p class=\"day__category\">${category}</p>`\r\n      \r\n    }\r\n  })\r\n\r\n}\r\n//watch for login or logout \r\nauth.onAuthStateChanged(user=>{\r\n  if (user){\r\n    console.log('user logged in');\r\n    user__button.style.color = 'green';\r\n    \r\n  }\r\n  else{\r\n    console.log('user logged out');\r\n    user__button.style.color = 'none';\r\n\r\n  }\r\n})\r\n\r\n//login form \r\n\r\nform__user.addEventListener('submit',e=>{\r\n  e.preventDefault();\r\n  const email = form__user.user__email.value;\r\n  const password = form__user.user__password.value;\r\n  \r\n  auth.signInWithEmailAndPassword(email, password)\r\n  .then(form__user.reset())\r\n  user__panel.classList.toggle('user__panel--show');\r\n  \r\n})\r\n//log out user\r\nuser__logout.addEventListener('click', e=>{\r\n  e.preventDefault();\r\n  user__panel.classList.toggle('user__panel--show')\r\n  auth.signOut();\r\n  \r\n})\r\n // show hide user panel\r\nuser__button.addEventListener('click', e=>{\r\n    user__panel.classList.toggle('user__panel--show');\r\n})\r\n//get data from firebase\r\ndb.collection('bankTransfers').orderBy(\"date\").get()\r\n.then(snapshot=>{\r\n  snapshot.docs.forEach(e=>{\r\n    const data = e.data();\r\n    console.log(data.date.toDate());\r\n    console.log(e.data());\r\n  })\r\n})\r\n\r\ndb.collection('bankTransfers').orderBy(\"date\").onSnapshot(snapshot=>{\r\n  \r\n  snapshot.docChanges().forEach(e=>{\r\n    const doc = e.doc;\r\n  console.log('doc.id', doc.id);    \r\n    if(e.type === 'added'){\r\n      let data = doc.data();\r\n      let fbDate = data.date;\r\n      data.date = fbDate.toDate();\r\n      data.dataId = doc.id;\r\n      \r\n        const li = document.createElement('li');\r\n        li.setAttribute('data-id', doc.id);\r\n        li.setAttribute('transDate-id', new Date(data.date));\r\n        li.setAttribute('class', 'container');\r\n        const dayDifference = dateFns.differenceInDays(new Date(data.date), new Date());\r\n        const {amount, bank, category, date, status, title} = data;\r\n    if(status === 'done'){\r\n      li.classList.add('container__done', 'container__done--hide')\r\n    }\r\n    li.innerHTML = addTransfer(amount, bank, category, date, status, title);\r\n    ul.append(li);\r\n    \r\n    \r\n    \r\n    }\r\n    if(e.type === 'modified'){\r\n    const li = document.createElement('li');\r\n    li.setAttribute('data-id', doc.id);\r\n    li.setAttribute('class', 'container');\r\n    li.classList.add('container__done');\r\n    const data = doc.data();\r\n    const dayDifference = dateFns.differenceInDays(new Date(data.date), new Date());\r\n    const {amount, bank, category, date, status, title} = data;\r\n    \r\n    li.innerHTML = addTransfer(amount, bank, category, date, status, title); \r\n    ul.append(li);\r\n    \r\n    }\r\n    \r\n    \r\n  })\r\n  // getting transfers list sort and display again\r\n  let list = ul.querySelectorAll('.container');\r\n    let arr = [...list];\r\n    ul.innerHTML = null;\r\n    arr.sort((a,b)=>{\r\n      a = new Date(a.getAttribute('transdate-id'));\r\n      b = new Date(b.getAttribute('transdate-id'));  \r\n      return a-b;\r\n      })\r\n    arr.forEach(e=>ul.append(e))\r\n    console.log(\"arr\", arr);\r\n  console.log('onsnapshot');\r\n})\r\n\r\nbackArrow.addEventListener('click', e=>{\r\n  add__transfer.classList.remove('add__transfer--show')\r\n})\r\n\r\nul.addEventListener(\"click\", e => {\r\n  if (e.target.tagName === \"I\" && e.target.classList.contains(\"arrow\")) {\r\n    e.target.parentElement.children\r\n      .item(3)\r\n      .classList.toggle(\"container__bar--hide\");\r\n    e.target.parentElement.children.item(4).classList.toggle(\"fa-rotate-180\");\r\n  }\r\n  if (e.target.tagName === \"I\" && e.target.classList.contains(\"icon__delete\")) {\r\n    let id = e.target.parentElement.parentElement.parentElement.getAttribute(\r\n      \"data-id\"\r\n    );\r\n    const containers = document.querySelectorAll(\".container\");\r\n    containers.forEach(e => {\r\n      if (e.getAttribute(\"data-id\") === id) {\r\n        db.collection(\"bankTransfers\")\r\n          .doc(id)\r\n          .delete()\r\n          .then(console.log(\"transfer deleted from firebase\"))\r\n          .catch(err => console.log(err));\r\n        e.remove();\r\n      }\r\n    });\r\n  }\r\n  if(e.target.tagName === \"I\" && e.target.classList.contains('icon__checked')){\r\n    console.log(e.target.parentElement.parentElement.parentElement);\r\n    const id = e.target.parentElement.parentElement.parentElement.getAttribute('data-id')\r\n    console.log(\"TCL: e.target.parentElement.parentElement.parentElement\", e.target.parentElement.parentElement.parentElement)\r\n    console.log(id);\r\n    db.collection('bankTransfers').doc(id).update({status: 'done'})\r\n    .then(console.log(\"transfer edited in firebase\"))\r\n    .catch(err => console.log(err));\r\n    e.target.parentElement.parentElement.parentElement.remove();\r\n  }\r\n});\r\n\r\naddButon.addEventListener('click', e=>{\r\n  add__transfer.classList.toggle('add__transfer--show');\r\n  // putting curent date in date input\r\n  const datePicker = document.getElementById('calendar');\r\n  datePicker.valueAsDate = new Date();\r\n})\r\n// Calendar view open\r\ncalendarButton.addEventListener('click', e=> {\r\n  calendarPopup.classList.toggle('calendar__popup--show');\r\n  let today = new Date();\r\n  printCalendar(today);\r\n// marking today day\r\nconst days = calendarWraper.querySelectorAll('.day');\r\n  days.forEach(e=>{\r\n    const day = e.innerText.slice(0,2);\r\n    if(+day === today.getDate()){\r\n      console.log(+day);\r\n      e.style.border = 'green solid 2px';\r\n    }\r\n    // console.log(+day)\r\n    })\r\n//  month arrow listener\r\n  monthName__navigation.addEventListener('click', e=>{\r\n    if(e.target.getAttribute('id') === 'nextMonth'){\r\n      today = dateFns.addMonths(today, 1);\r\n      calendarReset();\r\n      printCalendar(today);\r\n    }\r\n    if(e.target.getAttribute('id') === 'prevMonth'){\r\n      today = dateFns.subMonths(today, 1);\r\n      calendarReset();\r\n      printCalendar(today);\r\n    }\r\n})\r\n \r\n})\r\n\r\ncalendarBackArrow.addEventListener('click', e=>{\r\n  calendarPopup.classList.toggle('calendar__popup--show');\r\n  calendarReset();\r\n})\r\nshow__done.addEventListener('click', e=>{\r\n   const containers = ul.querySelectorAll('.container__done');\r\n   containers.forEach(e=>{\r\n     e.classList.toggle('container__done--hide')\r\n   })\r\n})\r\n// add new transfer to firebase\r\ntransfers__submit.addEventListener('click', e=>{\r\n  e.preventDefault();\r\n  const category = document.getElementById('category');\r\n  const bank =  document.querySelector('input[name=bank]:checked').value;\r\n  console.log(\"date from form\",transfers.date.valueAsDate);\r\n  const bankObject = Transfer(parseFloat(transfers.amount.value), bank, transfers.category.value, transfers.date.valueAsDate, '',transfers.title.value);\r\n    \r\n    db.collection('bankTransfers').add(bankObject).then(()=>{\r\n      console.log('transfer added to firebase')\r\n    })\r\n    transfers.reset();\r\n    add__transfer.classList.toggle('add__transfer--show');\r\n})\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n")},function(module,exports){eval("exports.endianness = function () { return 'LE' };\n\nexports.hostname = function () {\n    if (typeof location !== 'undefined') {\n        return location.hostname\n    }\n    else return '';\n};\n\nexports.loadavg = function () { return [] };\n\nexports.uptime = function () { return 0 };\n\nexports.freemem = function () {\n    return Number.MAX_VALUE;\n};\n\nexports.totalmem = function () {\n    return Number.MAX_VALUE;\n};\n\nexports.cpus = function () { return [] };\n\nexports.type = function () { return 'Browser' };\n\nexports.release = function () {\n    if (typeof navigator !== 'undefined') {\n        return navigator.appVersion;\n    }\n    return '';\n};\n\nexports.networkInterfaces\n= exports.getNetworkInterfaces\n= function () { return {} };\n\nexports.arch = function () { return 'javascript' };\n\nexports.platform = function () { return 'browser' };\n\nexports.tmpdir = exports.tmpDir = function () {\n    return '/tmp';\n};\n\nexports.EOL = '\\n';\n\nexports.homedir = function () {\n\treturn '/'\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvb3MtYnJvd3NlcmlmeS9icm93c2VyLmpzPzNjNDMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsa0NBQWtDOztBQUVsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsK0JBQStCOztBQUUvQiw4QkFBOEI7O0FBRTlCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsNEJBQTRCOztBQUU1Qiw0QkFBNEI7O0FBRTVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsZUFBZSxVQUFVOztBQUV6Qiw0QkFBNEI7O0FBRTVCLGdDQUFnQzs7QUFFaEM7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQSIsImZpbGUiOiIxLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0cy5lbmRpYW5uZXNzID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gJ0xFJyB9O1xuXG5leHBvcnRzLmhvc3RuYW1lID0gZnVuY3Rpb24gKCkge1xuICAgIGlmICh0eXBlb2YgbG9jYXRpb24gIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIHJldHVybiBsb2NhdGlvbi5ob3N0bmFtZVxuICAgIH1cbiAgICBlbHNlIHJldHVybiAnJztcbn07XG5cbmV4cG9ydHMubG9hZGF2ZyA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFtdIH07XG5cbmV4cG9ydHMudXB0aW1lID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gMCB9O1xuXG5leHBvcnRzLmZyZWVtZW0gPSBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIE51bWJlci5NQVhfVkFMVUU7XG59O1xuXG5leHBvcnRzLnRvdGFsbWVtID0gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBOdW1iZXIuTUFYX1ZBTFVFO1xufTtcblxuZXhwb3J0cy5jcHVzID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gW10gfTtcblxuZXhwb3J0cy50eXBlID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gJ0Jyb3dzZXInIH07XG5cbmV4cG9ydHMucmVsZWFzZSA9IGZ1bmN0aW9uICgpIHtcbiAgICBpZiAodHlwZW9mIG5hdmlnYXRvciAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgcmV0dXJuIG5hdmlnYXRvci5hcHBWZXJzaW9uO1xuICAgIH1cbiAgICByZXR1cm4gJyc7XG59O1xuXG5leHBvcnRzLm5ldHdvcmtJbnRlcmZhY2VzXG49IGV4cG9ydHMuZ2V0TmV0d29ya0ludGVyZmFjZXNcbj0gZnVuY3Rpb24gKCkgeyByZXR1cm4ge30gfTtcblxuZXhwb3J0cy5hcmNoID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gJ2phdmFzY3JpcHQnIH07XG5cbmV4cG9ydHMucGxhdGZvcm0gPSBmdW5jdGlvbiAoKSB7IHJldHVybiAnYnJvd3NlcicgfTtcblxuZXhwb3J0cy50bXBkaXIgPSBleHBvcnRzLnRtcERpciA9IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gJy90bXAnO1xufTtcblxuZXhwb3J0cy5FT0wgPSAnXFxuJztcblxuZXhwb3J0cy5ob21lZGlyID0gZnVuY3Rpb24gKCkge1xuXHRyZXR1cm4gJy8nXG59O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///1\n")}]);